/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BLL.BLL_PhieuMuon;
import DTO.DTO_ChiTietPhieuMuon;
import DTO.DTO_PhieuMuon;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 3dx
 */
public class GUI_BangPhieuMuon extends javax.swing.JFrame {
    DefaultTableModel model;
    BLL_PhieuMuon BLLpm = new BLL_PhieuMuon();
    /**
     * Creates new form GUI_BangPhieuMuon
     */
    public GUI_BangPhieuMuon() {
        initComponents();
        setLocationRelativeTo(null);
        loadPMList();
    }
    
    
    public void loadPMList(){
        model = new DefaultTableModel();
        model.addColumn("Mã phiếu mượn");
        model.addColumn("Mã độc giả");
        model.addColumn("Mã thẻ");
        model.addColumn("Số quyển mượn");
        tbPhieuMuon.setModel(model);
        ArrayList<DTO_PhieuMuon> arr = new ArrayList<DTO_PhieuMuon>();
        arr = BLLpm.BLLgetDL();
        for(int i = 0; i < arr.size(); i++){
            DTO_PhieuMuon pm = arr.get(i);
            String mapm = pm.getMaPM();
            String madg = pm.getMaDG();
            String mathe = pm.getMaThe();
            int soluongmuon = pm.getTongSachMuon();
            Object[] row = {mapm,madg,mathe,soluongmuon};
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        Sửa = new javax.swing.JMenuItem();
        Xóa = new javax.swing.JMenuItem();
        Xem = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPhieuMuon = new javax.swing.JTable();
        btnThoat = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTim = new javax.swing.JTextField();
        cbbTim = new javax.swing.JComboBox<>();
        btnTim = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        Sửa.setText("Sửa");
        Sửa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SửaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Sửa);

        Xóa.setText("Xóa");
        Xóa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XóaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Xóa);

        Xem.setText("Xem chi tiết phiếu mượn");
        Xem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Xem);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bảng phiếu mượn");

        tbPhieuMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã phiếu mượn", "Mã độc giả", "Mã thẻ", "Số quyển mượn"
            }
        ));
        tbPhieuMuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbPhieuMuonMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbPhieuMuon);

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jLabel1.setText("Tìm phiếu mượn");

        cbbTim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã phiếu mượn", "Mã độc giả", "Mã thẻ" }));

        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReset)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cbbTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTim)
                    .addComponent(btnReset))
                .addGap(29, 29, 29)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void SửaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SửaActionPerformed
        // TODO add your handling code here:
        int i = tbPhieuMuon.getSelectedRow();
        DTO_PhieuMuon pm = new DTO_PhieuMuon();
        if (i>=0){
            pm.setMaPM(model.getValueAt(i, 0).toString()); 
            pm.setMaDG(model.getValueAt(i, 1).toString());
            pm.setMaThe(model.getValueAt(i, 2).toString());
            pm.setTongSachMuon(Integer.valueOf(model.getValueAt(i, 3).toString()));
            JOptionPane.showMessageDialog(this, BLLpm.BLLsua(pm));
            loadPMList();
        }else{
            JOptionPane.showMessageDialog(this, "Hãy chọn 1 dòng để sửa");
        }
    }//GEN-LAST:event_SửaActionPerformed

    private void tbPhieuMuonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPhieuMuonMouseReleased
        // TODO add your handling code here:
        if (SwingUtilities.isRightMouseButton(evt)) {
            jPopupMenu1.show(tbPhieuMuon, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tbPhieuMuonMouseReleased

    private void XóaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XóaActionPerformed
        // TODO add your handling code here:
        int i = tbPhieuMuon.getSelectedRow();
        DTO_PhieuMuon pm = new DTO_PhieuMuon();
        if(i >= 0){
            pm.setMaPM(model.getValueAt(i, 0).toString());
            pm.setMaDG(model.getValueAt(i, 1).toString()); 
            pm.setMaThe(model.getValueAt(i, 2).toString()); 
            pm.setTongSachMuon(Integer.valueOf(model.getValueAt(i, 3).toString()));
            int result = JOptionPane.showConfirmDialog(null,"Bạn có chắc chắn muốn xóa không?","Xác nhận", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(this, BLLpm.BLLxoa(pm));
                loadPMList();
            } else {}
        }else{
            JOptionPane.showMessageDialog(this, "Hãy chọn 1 dòng để xóa");
        }
    }//GEN-LAST:event_XóaActionPerformed

    private void XemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XemActionPerformed
        // TODO add your handling code here:
        int i = tbPhieuMuon.getSelectedRow();
        if(i >= 0){
            ArrayList<DTO_ChiTietPhieuMuon> CTPM = BLLpm.BLLTimCTPM(model.getValueAt(i, 0).toString());
            GUI_ChiTietPhieuMuon ctpm = new GUI_ChiTietPhieuMuon(CTPM);
            ctpm.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Hãy chọn 1 phiếu trả muốn xem");
        }
    }//GEN-LAST:event_XemActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        if(txtTim.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập dữ liệu muốn tìm kiếm");
        }else if(cbbTim.getSelectedItem() == null){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn kiểu tìm kiếm");
        }else{
            String selectedValue = cbbTim.getSelectedItem().toString();
            switch (selectedValue) {
                case "Mã phiếu mượn":
                    String maPMCanTim = txtTim.getText();
                    DTO_PhieuMuon ketQuaMaPM = BLLpm.BLLtim(maPMCanTim);
                    if (ketQuaMaPM != null){
                        model = (DefaultTableModel) tbPhieuMuon.getModel();
                        model.setRowCount(0);
                        Object[] row = {ketQuaMaPM.getMaPM(),ketQuaMaPM.getMaDG(),ketQuaMaPM.getMaThe(),ketQuaMaPM.getTongSachMuon()};
                        model.addRow(row);
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Không tìm thấy mã phiếu mượn");
                    }
                    break;
                case "Mã độc giả":
                    String maDGCanTim = txtTim.getText();
                    ArrayList<DTO_PhieuMuon> ketQuaMaDG = BLLpm.BLLtimmadg(maDGCanTim);
                    if (ketQuaMaDG .size() > 0){
                        model = (DefaultTableModel) tbPhieuMuon.getModel();
                        model.setRowCount(0);
                        for(DTO_PhieuMuon pm : ketQuaMaDG){
                            Object[] row = {pm.getMaPM(),pm.getMaDG(),pm.getMaThe(),pm.getTongSachMuon()};
                            model.addRow(row);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Không tìm thấy mã độc giả");
                    }
                    break;
                case "Mã thẻ":
                    String maTheCanTim = txtTim.getText();
                    ArrayList<DTO_PhieuMuon> ketQuaMaThe = BLLpm.BLLtimmathe(maTheCanTim);
                    if (ketQuaMaThe .size() > 0){
                        model = (DefaultTableModel) tbPhieuMuon.getModel();
                        model.setRowCount(0);
                        for(DTO_PhieuMuon pm : ketQuaMaThe){
                            Object[] row = {pm.getMaPM(),pm.getMaDG(),pm.getMaThe(),pm.getTongSachMuon()};
                            model.addRow(row);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Không tìm thấy mã thẻ");
                    }
                    break;
                default:
                    throw new AssertionError();
            }
        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        loadPMList();
        txtTim.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_BangPhieuMuon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_BangPhieuMuon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_BangPhieuMuon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_BangPhieuMuon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_BangPhieuMuon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Sửa;
    private javax.swing.JMenuItem Xem;
    private javax.swing.JMenuItem Xóa;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTim;
    private javax.swing.JComboBox<String> cbbTim;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPhieuMuon;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
